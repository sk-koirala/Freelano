/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package com.freelano.view;


import com.freelano.model.FreelanceModel;
import com.freelano.util.ValidationUtil;
import java.awt.Color;
import java.util.LinkedList;
import java.util.List;
import javax.swing.JLabel;
import javax.swing.JOptionPane;
import javax.swing.JTextField;
import javax.swing.table.DefaultTableModel;
import com.freelano.controller.algorithms.SelectionSort;
import com.freelano.controller.algorithms.BinarySearch;
import com.freelano.controller.algorithms.InsertionSort;
import com.freelano.controller.algorithms.MergeSort;

/**
 *
 * @author Suyash Koirala
 */
public class Freelano extends javax.swing.JFrame {
    
    private List<FreelanceModel> freelancerList;
    private java.awt.CardLayout cardLayout;
    private final ValidationUtil validationUtil;
    private final Color errorColor = new Color(255, 0, 0);
    private final Color greenColor = new Color(0, 255, 0);
    
    //private final SelectionSort selectionSort;

    /**
     * Creates new form Freelano
     */
    public Freelano() {
        initComponents();
        
        //validationUtil = new ValidationUtil();
        initializeLayout(); // Set up CardLayout and add screens
        initializeData(); // Initialize student data and table
        startProgress();
        validationUtil = new ValidationUtil();
    }

    private void initializeLayout() {
        cardLayout = new java.awt.CardLayout();
        getContentPane().setLayout(cardLayout);

        // Add panels with unique identifiers
        getContentPane().add(pnlLoadingMain, "LoadingScreen");
        getContentPane().add(pnlFreelanoLogin, "LoginScreen");
        getContentPane().add(pnlFreelanoMain, "MainScreen");

        // Start with the loading screen
        loadScreen("LoadingScreen");
    }
    
    private void loadScreen(String screenName) {
        cardLayout.show(getContentPane(), screenName);
    }
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        pnlFreelanoLogin = new javax.swing.JPanel();
        lblSignIn = new javax.swing.JLabel();
        lblUserName = new javax.swing.JLabel();
        lblPassword = new javax.swing.JLabel();
        txtFldUserName = new javax.swing.JTextField();
        jFldPassword = new javax.swing.JPasswordField();
        btnLogin = new javax.swing.JButton();
        lblErrorLogin = new javax.swing.JLabel();
        lblForgetPassword = new javax.swing.JLabel();
        lblLoginLogo = new javax.swing.JLabel();
        pnlFreelanoMain = new javax.swing.JPanel();
        pnlHeadingTitle = new javax.swing.JPanel();
        lblHeading = new javax.swing.JLabel();
        lblMainLogo = new javax.swing.JLabel();
        jtbMainDasBoard = new javax.swing.JTabbedPane();
        pnlHome = new javax.swing.JPanel();
        lblHomeLogo = new javax.swing.JLabel();
        lblHomeTitle = new javax.swing.JLabel();
        lblSubTitle = new javax.swing.JLabel();
        lblTitleThird = new javax.swing.JLabel();
        pnlFreelancerList = new javax.swing.JPanel();
        pnlFreelanoDetail = new javax.swing.JPanel();
        lblFreelanceTitle = new javax.swing.JLabel();
        txtFldFreelancerId = new javax.swing.JTextField();
        txtFldFullName = new javax.swing.JTextField();
        txtFldExpertise = new javax.swing.JTextField();
        txtFldAddress = new javax.swing.JTextField();
        txtFldAge = new javax.swing.JTextField();
        txtFldProject = new javax.swing.JTextField();
        lblErrorFrelancerId = new javax.swing.JLabel();
        lblErrorFullName = new javax.swing.JLabel();
        lblErrorExpertise = new javax.swing.JLabel();
        lblErrorAddress = new javax.swing.JLabel();
        lblErrorProject = new javax.swing.JLabel();
        lblErrorAge = new javax.swing.JLabel();
        btnUpdate = new javax.swing.JButton();
        btnClear = new javax.swing.JButton();
        btnAdd = new javax.swing.JButton();
        btnDelete1 = new javax.swing.JButton();
        pnlFreelanoList = new javax.swing.JPanel();
        jSpTableScoll = new javax.swing.JScrollPane();
        tblFreelano = new javax.swing.JTable();
        lblInfoTable = new javax.swing.JLabel();
        btnFreelancerId = new javax.swing.JButton();
        btnMergeSortAge = new javax.swing.JButton();
        btnExpertise = new javax.swing.JButton();
        txtFldSearchName = new javax.swing.JTextField();
        btnSearchName = new javax.swing.JButton();
        pnlAboutUs = new javax.swing.JPanel();
        lblAboutUsLogo = new javax.swing.JLabel();
        lblAboutUsTitle = new javax.swing.JLabel();
        lblAboutMe = new javax.swing.JLabel();
        lblAboutMeIntro = new javax.swing.JLabel();
        lblImageIcon = new javax.swing.JLabel();
        pnlLoadingMain = new javax.swing.JPanel();
        jpLoadingBar = new javax.swing.JProgressBar();
        lblLoading = new javax.swing.JLabel();
        lblWelcomeLogo = new javax.swing.JLabel();
        lblLoadingTitle = new javax.swing.JLabel();

        pnlFreelanoLogin.setBackground(new java.awt.Color(211, 211, 211));
        pnlFreelanoLogin.setPreferredSize(new java.awt.Dimension(807, 509));

        lblSignIn.setFont(new java.awt.Font("Helvetica Neue", 1, 18)); // NOI18N
        lblSignIn.setForeground(new java.awt.Color(153, 102, 0));
        lblSignIn.setText("Sign In To Freelano");

        lblUserName.setFont(new java.awt.Font("Helvetica Neue", 0, 14)); // NOI18N
        lblUserName.setForeground(new java.awt.Color(153, 102, 0));
        lblUserName.setText("Username");

        lblPassword.setFont(new java.awt.Font("Helvetica Neue", 0, 14)); // NOI18N
        lblPassword.setForeground(new java.awt.Color(153, 102, 0));
        lblPassword.setText("Password");

        btnLogin.setBackground(new java.awt.Color(153, 102, 0));
        btnLogin.setFont(new java.awt.Font("Helvetica Neue", 1, 15)); // NOI18N
        btnLogin.setForeground(new java.awt.Color(255, 255, 255));
        btnLogin.setText("LOGIN");
        btnLogin.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnLoginActionPerformed(evt);
            }
        });

        lblErrorLogin.setForeground(new java.awt.Color(204, 0, 0));

        lblForgetPassword.setFont(new java.awt.Font("Helvetica Neue", 0, 15)); // NOI18N
        lblForgetPassword.setText("    Fogot Your Password ?");

        lblLoginLogo.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/freelano/resources/Login.png"))); // NOI18N

        javax.swing.GroupLayout pnlFreelanoLoginLayout = new javax.swing.GroupLayout(pnlFreelanoLogin);
        pnlFreelanoLogin.setLayout(pnlFreelanoLoginLayout);
        pnlFreelanoLoginLayout.setHorizontalGroup(
            pnlFreelanoLoginLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, pnlFreelanoLoginLayout.createSequentialGroup()
                .addContainerGap(98, Short.MAX_VALUE)
                .addComponent(lblLoginLogo, javax.swing.GroupLayout.PREFERRED_SIZE, 422, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(26, 26, 26)
                .addGroup(pnlFreelanoLoginLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(lblPassword, javax.swing.GroupLayout.PREFERRED_SIZE, 91, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblSignIn, javax.swing.GroupLayout.PREFERRED_SIZE, 177, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblUserName, javax.swing.GroupLayout.PREFERRED_SIZE, 91, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtFldUserName)
                    .addComponent(jFldPassword)
                    .addComponent(btnLogin, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(lblErrorLogin, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(lblForgetPassword, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 193, Short.MAX_VALUE))
                .addGap(68, 68, 68))
        );
        pnlFreelanoLoginLayout.setVerticalGroup(
            pnlFreelanoLoginLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlFreelanoLoginLayout.createSequentialGroup()
                .addGap(69, 69, 69)
                .addComponent(lblSignIn)
                .addGap(30, 30, 30)
                .addComponent(lblUserName)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(txtFldUserName, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(lblPassword)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jFldPassword, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(lblErrorLogin, javax.swing.GroupLayout.PREFERRED_SIZE, 12, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(lblForgetPassword, javax.swing.GroupLayout.PREFERRED_SIZE, 17, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(btnLogin, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, pnlFreelanoLoginLayout.createSequentialGroup()
                .addContainerGap(55, Short.MAX_VALUE)
                .addComponent(lblLoginLogo, javax.swing.GroupLayout.PREFERRED_SIZE, 356, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(98, 98, 98))
        );

        pnlHeadingTitle.setBackground(new java.awt.Color(255, 255, 255));

        lblHeading.setFont(new java.awt.Font("Helvetica Neue", 1, 22)); // NOI18N
        lblHeading.setForeground(new java.awt.Color(153, 102, 0));
        lblHeading.setText("Freelancer Collaboration System");

        lblMainLogo.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/freelano/resources/logoimage (1) (1).png"))); // NOI18N

        javax.swing.GroupLayout pnlHeadingTitleLayout = new javax.swing.GroupLayout(pnlHeadingTitle);
        pnlHeadingTitle.setLayout(pnlHeadingTitleLayout);
        pnlHeadingTitleLayout.setHorizontalGroup(
            pnlHeadingTitleLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlHeadingTitleLayout.createSequentialGroup()
                .addGap(31, 31, 31)
                .addComponent(lblMainLogo)
                .addGap(150, 150, 150)
                .addComponent(lblHeading, javax.swing.GroupLayout.PREFERRED_SIZE, 417, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        pnlHeadingTitleLayout.setVerticalGroup(
            pnlHeadingTitleLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlHeadingTitleLayout.createSequentialGroup()
                .addGap(16, 16, 16)
                .addComponent(lblHeading)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, pnlHeadingTitleLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(lblMainLogo, javax.swing.GroupLayout.DEFAULT_SIZE, 60, Short.MAX_VALUE))
        );

        lblHomeLogo.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/freelano/resources/homepage.jpg"))); // NOI18N

        lblHomeTitle.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        lblHomeTitle.setForeground(new java.awt.Color(153, 121, 0));
        lblHomeTitle.setText("Hire the best freelancer for any job, online.");

        lblSubTitle.setBackground(new java.awt.Color(255, 204, 204));
        lblSubTitle.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        lblSubTitle.setForeground(new java.awt.Color(255, 102, 102));
        lblSubTitle.setText("Hire a freelancer");

        lblTitleThird.setText("Earn Money Freelancing");

        javax.swing.GroupLayout pnlHomeLayout = new javax.swing.GroupLayout(pnlHome);
        pnlHome.setLayout(pnlHomeLayout);
        pnlHomeLayout.setHorizontalGroup(
            pnlHomeLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, pnlHomeLayout.createSequentialGroup()
                .addGap(36, 36, 36)
                .addGroup(pnlHomeLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(lblHomeTitle, javax.swing.GroupLayout.PREFERRED_SIZE, 396, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(pnlHomeLayout.createSequentialGroup()
                        .addComponent(lblSubTitle, javax.swing.GroupLayout.PREFERRED_SIZE, 140, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(114, 114, 114)
                        .addComponent(lblTitleThird, javax.swing.GroupLayout.PREFERRED_SIZE, 88, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 90, Short.MAX_VALUE)
                .addComponent(lblHomeLogo, javax.swing.GroupLayout.PREFERRED_SIZE, 445, javax.swing.GroupLayout.PREFERRED_SIZE))
        );
        pnlHomeLayout.setVerticalGroup(
            pnlHomeLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlHomeLayout.createSequentialGroup()
                .addComponent(lblHomeLogo, javax.swing.GroupLayout.PREFERRED_SIZE, 379, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 258, Short.MAX_VALUE))
            .addGroup(pnlHomeLayout.createSequentialGroup()
                .addGap(67, 67, 67)
                .addComponent(lblHomeTitle, javax.swing.GroupLayout.PREFERRED_SIZE, 42, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(74, 74, 74)
                .addGroup(pnlHomeLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblSubTitle)
                    .addComponent(lblTitleThird))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jtbMainDasBoard.addTab("Home", pnlHome);

        pnlFreelanoDetail.setBackground(new java.awt.Color(255, 255, 255));

        lblFreelanceTitle.setFont(new java.awt.Font("Helvetica Neue", 1, 14)); // NOI18N
        lblFreelanceTitle.setForeground(new java.awt.Color(153, 121, 0));
        lblFreelanceTitle.setText("Freelano Detail");

        txtFldFreelancerId.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(51, 0, 51), 2), "Freelancer Id", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Serif", 0, 14), new java.awt.Color(51, 0, 51)), "", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Segoe UI", 0, 12), new java.awt.Color(51, 0, 51)), "", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Segoe UI", 0, 12), new java.awt.Color(51, 0, 51))); // NOI18N
        txtFldFreelancerId.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtFldFreelancerIdActionPerformed(evt);
            }
        });

        txtFldFullName.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(51, 0, 51), 2), "Full Name", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Serif", 0, 14), new java.awt.Color(51, 0, 51)), "", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Segoe UI", 0, 12), new java.awt.Color(51, 0, 51)), "", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Segoe UI", 0, 12), new java.awt.Color(51, 0, 51))); // NOI18N

        txtFldExpertise.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(51, 0, 51), 2), "Expertise", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Serif", 0, 14), new java.awt.Color(51, 0, 51)), "", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Segoe UI", 0, 12), new java.awt.Color(51, 0, 51)), "", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Segoe UI", 0, 12), new java.awt.Color(51, 0, 51))); // NOI18N

        txtFldAddress.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(51, 0, 51), 2), "Address", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Serif", 0, 14), new java.awt.Color(51, 0, 51)), "", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Segoe UI", 0, 12), new java.awt.Color(51, 0, 51)), "", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Segoe UI", 0, 12), new java.awt.Color(51, 0, 51))); // NOI18N
        txtFldAddress.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtFldAddressActionPerformed(evt);
            }
        });

        txtFldAge.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(51, 0, 51), 2), "Age", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Serif", 0, 14), new java.awt.Color(51, 0, 51)), "", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Segoe UI", 0, 12), new java.awt.Color(51, 0, 51)), "", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Segoe UI", 0, 12), new java.awt.Color(51, 0, 51))); // NOI18N

        txtFldProject.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(51, 0, 51), 2), "Project", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Serif", 0, 14), new java.awt.Color(51, 0, 51)), "", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Segoe UI", 0, 12), new java.awt.Color(51, 0, 51)), "", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Segoe UI", 0, 12), new java.awt.Color(51, 0, 51))); // NOI18N

        lblErrorFrelancerId.setForeground(new java.awt.Color(204, 0, 0));

        lblErrorFullName.setForeground(new java.awt.Color(204, 0, 0));

        lblErrorExpertise.setForeground(new java.awt.Color(204, 0, 0));

        lblErrorAddress.setForeground(new java.awt.Color(204, 0, 0));

        lblErrorProject.setForeground(new java.awt.Color(204, 0, 0));

        lblErrorAge.setForeground(new java.awt.Color(204, 0, 0));

        btnUpdate.setBackground(new java.awt.Color(153, 102, 0));
        btnUpdate.setForeground(new java.awt.Color(255, 255, 255));
        btnUpdate.setText("UPDATE");
        btnUpdate.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnUpdateActionPerformed(evt);
            }
        });

        btnClear.setBackground(new java.awt.Color(153, 102, 0));
        btnClear.setForeground(new java.awt.Color(255, 255, 255));
        btnClear.setText("CLEAR");

        btnAdd.setBackground(new java.awt.Color(153, 102, 0));
        btnAdd.setForeground(new java.awt.Color(255, 255, 255));
        btnAdd.setText("ADD");
        btnAdd.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAddActionPerformed(evt);
            }
        });

        btnDelete1.setBackground(new java.awt.Color(153, 102, 0));
        btnDelete1.setForeground(new java.awt.Color(255, 255, 255));
        btnDelete1.setText("DELETE");
        btnDelete1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDelete1ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout pnlFreelanoDetailLayout = new javax.swing.GroupLayout(pnlFreelanoDetail);
        pnlFreelanoDetail.setLayout(pnlFreelanoDetailLayout);
        pnlFreelanoDetailLayout.setHorizontalGroup(
            pnlFreelanoDetailLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlFreelanoDetailLayout.createSequentialGroup()
                .addGap(16, 16, 16)
                .addGroup(pnlFreelanoDetailLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(pnlFreelanoDetailLayout.createSequentialGroup()
                        .addComponent(lblFreelanceTitle, javax.swing.GroupLayout.PREFERRED_SIZE, 110, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addContainerGap())
                    .addGroup(pnlFreelanoDetailLayout.createSequentialGroup()
                        .addGap(22, 22, 22)
                        .addGroup(pnlFreelanoDetailLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(pnlFreelanoDetailLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                .addComponent(lblErrorFrelancerId, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(txtFldFreelancerId, javax.swing.GroupLayout.DEFAULT_SIZE, 164, Short.MAX_VALUE))
                            .addComponent(lblErrorProject, javax.swing.GroupLayout.PREFERRED_SIZE, 155, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txtFldProject, javax.swing.GroupLayout.PREFERRED_SIZE, 164, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(58, 58, 58)
                        .addGroup(pnlFreelanoDetailLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(pnlFreelanoDetailLayout.createSequentialGroup()
                                .addGroup(pnlFreelanoDetailLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                    .addComponent(lblErrorFullName, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(txtFldFullName, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 164, Short.MAX_VALUE))
                                .addGap(75, 75, 75)
                                .addGroup(pnlFreelanoDetailLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(lblErrorExpertise, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(txtFldExpertise, javax.swing.GroupLayout.DEFAULT_SIZE, 164, Short.MAX_VALUE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addGroup(pnlFreelanoDetailLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(txtFldAddress, javax.swing.GroupLayout.DEFAULT_SIZE, 164, Short.MAX_VALUE)
                                    .addComponent(lblErrorAddress, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                .addGap(16, 16, 16))
                            .addGroup(pnlFreelanoDetailLayout.createSequentialGroup()
                                .addGap(32, 32, 32)
                                .addGroup(pnlFreelanoDetailLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(txtFldAge, javax.swing.GroupLayout.PREFERRED_SIZE, 164, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGroup(pnlFreelanoDetailLayout.createSequentialGroup()
                                        .addGap(6, 6, 6)
                                        .addComponent(lblErrorAge, javax.swing.GroupLayout.PREFERRED_SIZE, 164, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addGroup(pnlFreelanoDetailLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(btnAdd, javax.swing.GroupLayout.PREFERRED_SIZE, 129, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(btnDelete1, javax.swing.GroupLayout.PREFERRED_SIZE, 129, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(50, 50, 50)
                                .addGroup(pnlFreelanoDetailLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(btnClear, javax.swing.GroupLayout.PREFERRED_SIZE, 129, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(btnUpdate, javax.swing.GroupLayout.PREFERRED_SIZE, 129, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(34, 34, 34))))))
        );
        pnlFreelanoDetailLayout.setVerticalGroup(
            pnlFreelanoDetailLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, pnlFreelanoDetailLayout.createSequentialGroup()
                .addGap(17, 17, 17)
                .addComponent(lblFreelanceTitle)
                .addGroup(pnlFreelanoDetailLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(pnlFreelanoDetailLayout.createSequentialGroup()
                        .addGap(31, 31, 31)
                        .addGroup(pnlFreelanoDetailLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(pnlFreelanoDetailLayout.createSequentialGroup()
                                .addGroup(pnlFreelanoDetailLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(txtFldFreelancerId, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(txtFldFullName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(txtFldExpertise, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(txtFldAddress, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGroup(pnlFreelanoDetailLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(pnlFreelanoDetailLayout.createSequentialGroup()
                                        .addGap(23, 23, 23)
                                        .addComponent(lblErrorFrelancerId, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGroup(pnlFreelanoDetailLayout.createSequentialGroup()
                                        .addGap(13, 13, 13)
                                        .addComponent(lblErrorExpertise, javax.swing.GroupLayout.PREFERRED_SIZE, 13, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGroup(pnlFreelanoDetailLayout.createSequentialGroup()
                                        .addGap(18, 18, 18)
                                        .addComponent(lblErrorAddress, javax.swing.GroupLayout.PREFERRED_SIZE, 13, javax.swing.GroupLayout.PREFERRED_SIZE))))
                            .addComponent(lblErrorFullName, javax.swing.GroupLayout.PREFERRED_SIZE, 8, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(47, 47, 47)
                        .addGroup(pnlFreelanoDetailLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(btnUpdate, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(btnAdd, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addContainerGap(79, Short.MAX_VALUE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, pnlFreelanoDetailLayout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(pnlFreelanoDetailLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(pnlFreelanoDetailLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                .addGroup(pnlFreelanoDetailLayout.createSequentialGroup()
                                    .addComponent(txtFldProject, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                    .addComponent(lblErrorProject, javax.swing.GroupLayout.PREFERRED_SIZE, 9, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGroup(pnlFreelanoDetailLayout.createSequentialGroup()
                                    .addComponent(txtFldAge, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                    .addComponent(lblErrorAge, javax.swing.GroupLayout.PREFERRED_SIZE, 9, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addGroup(pnlFreelanoDetailLayout.createSequentialGroup()
                                .addGap(54, 54, 54)
                                .addGroup(pnlFreelanoDetailLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(btnClear, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(btnDelete1, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE))))
                        .addGap(23, 23, 23))))
        );

        tblFreelano.setBackground(new java.awt.Color(153, 102, 0));
        tblFreelano.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null}
            },
            new String [] {
                "Freelancer Id", "Full Name", "Expertise", "Address", "Project", "Age"
            }
        ));
        jSpTableScoll.setViewportView(tblFreelano);

        javax.swing.GroupLayout pnlFreelanoListLayout = new javax.swing.GroupLayout(pnlFreelanoList);
        pnlFreelanoList.setLayout(pnlFreelanoListLayout);
        pnlFreelanoListLayout.setHorizontalGroup(
            pnlFreelanoListLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, pnlFreelanoListLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jSpTableScoll)
                .addContainerGap())
        );
        pnlFreelanoListLayout.setVerticalGroup(
            pnlFreelanoListLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlFreelanoListLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jSpTableScoll, javax.swing.GroupLayout.PREFERRED_SIZE, 105, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(160, Short.MAX_VALUE))
        );

        lblInfoTable.setFont(new java.awt.Font("Helvetica Neue", 1, 14)); // NOI18N
        lblInfoTable.setForeground(new java.awt.Color(153, 121, 0));
        lblInfoTable.setText("Freelano Information Table");

        btnFreelancerId.setBackground(new java.awt.Color(153, 102, 0));
        btnFreelancerId.setForeground(new java.awt.Color(255, 255, 255));
        btnFreelancerId.setText("Sort By Freelancer Id");
        btnFreelancerId.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnFreelancerIdActionPerformed(evt);
            }
        });

        btnMergeSortAge.setBackground(new java.awt.Color(153, 102, 0));
        btnMergeSortAge.setForeground(new java.awt.Color(255, 255, 255));
        btnMergeSortAge.setText("Merge Sort Age");
        btnMergeSortAge.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnMergeSortAgeActionPerformed(evt);
            }
        });

        btnExpertise.setBackground(new java.awt.Color(153, 102, 0));
        btnExpertise.setForeground(new java.awt.Color(255, 255, 255));
        btnExpertise.setText("Sort Expertise");
        btnExpertise.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnExpertiseActionPerformed(evt);
            }
        });

        txtFldSearchName.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtFldSearchNameActionPerformed(evt);
            }
        });

        btnSearchName.setBackground(new java.awt.Color(153, 102, 0));
        btnSearchName.setForeground(new java.awt.Color(255, 255, 255));
        btnSearchName.setText("Search Name");
        btnSearchName.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSearchNameActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout pnlFreelancerListLayout = new javax.swing.GroupLayout(pnlFreelancerList);
        pnlFreelancerList.setLayout(pnlFreelancerListLayout);
        pnlFreelancerListLayout.setHorizontalGroup(
            pnlFreelancerListLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(pnlFreelanoList, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(pnlFreelancerListLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(pnlFreelancerListLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(pnlFreelancerListLayout.createSequentialGroup()
                        .addComponent(pnlFreelanoDetail, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addContainerGap())
                    .addGroup(pnlFreelancerListLayout.createSequentialGroup()
                        .addComponent(lblInfoTable, javax.swing.GroupLayout.PREFERRED_SIZE, 198, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 64, Short.MAX_VALUE)
                        .addComponent(btnSearchName)
                        .addGap(18, 18, 18)
                        .addComponent(txtFldSearchName, javax.swing.GroupLayout.PREFERRED_SIZE, 123, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(30, 30, 30)
                        .addComponent(btnExpertise)
                        .addGap(8, 8, 8)
                        .addComponent(btnMergeSortAge, javax.swing.GroupLayout.PREFERRED_SIZE, 128, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(btnFreelancerId, javax.swing.GroupLayout.PREFERRED_SIZE, 161, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18))))
        );
        pnlFreelancerListLayout.setVerticalGroup(
            pnlFreelancerListLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlFreelancerListLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(pnlFreelanoDetail, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(29, 29, 29)
                .addGroup(pnlFreelancerListLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, pnlFreelancerListLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(btnFreelancerId)
                        .addComponent(btnMergeSortAge, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(btnExpertise)
                        .addComponent(txtFldSearchName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, pnlFreelancerListLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(lblInfoTable, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(btnSearchName)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(pnlFreelanoList, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jtbMainDasBoard.addTab("Freelancer List", pnlFreelancerList);

        lblAboutUsLogo.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/freelano/resources/aboutusimage.png"))); // NOI18N

        lblAboutUsTitle.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        lblAboutUsTitle.setForeground(new java.awt.Color(153, 121, 0));
        lblAboutUsTitle.setText("About Me");

        lblAboutMe.setFont(new java.awt.Font("Segoe UI", 0, 13)); // NOI18N
        lblAboutMe.setForeground(new java.awt.Color(153, 121, 0));
        lblAboutMe.setText("Hello! I'm Suyesh Koirala ");

        lblAboutMeIntro.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        lblAboutMeIntro.setForeground(new java.awt.Color(153, 121, 0));
        lblAboutMeIntro.setText("I'm a passionate and creative UI/UX Designer");

        lblImageIcon.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/freelano/resources/Myimage.jpg"))); // NOI18N

        javax.swing.GroupLayout pnlAboutUsLayout = new javax.swing.GroupLayout(pnlAboutUs);
        pnlAboutUs.setLayout(pnlAboutUsLayout);
        pnlAboutUsLayout.setHorizontalGroup(
            pnlAboutUsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, pnlAboutUsLayout.createSequentialGroup()
                .addGap(18, 18, 18)
                .addGroup(pnlAboutUsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, pnlAboutUsLayout.createSequentialGroup()
                        .addComponent(lblAboutUsTitle, javax.swing.GroupLayout.PREFERRED_SIZE, 108, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(88, 88, 88))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, pnlAboutUsLayout.createSequentialGroup()
                        .addComponent(lblAboutMe, javax.swing.GroupLayout.PREFERRED_SIZE, 163, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(68, 68, 68))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, pnlAboutUsLayout.createSequentialGroup()
                        .addGroup(pnlAboutUsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(lblImageIcon, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(lblAboutMeIntro))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)))
                .addComponent(lblAboutUsLogo, javax.swing.GroupLayout.PREFERRED_SIZE, 642, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
        pnlAboutUsLayout.setVerticalGroup(
            pnlAboutUsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, pnlAboutUsLayout.createSequentialGroup()
                .addComponent(lblAboutUsLogo, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
            .addGroup(pnlAboutUsLayout.createSequentialGroup()
                .addGap(80, 80, 80)
                .addComponent(lblAboutUsTitle, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(42, 42, 42)
                .addComponent(lblImageIcon, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGap(18, 18, 18)
                .addComponent(lblAboutMe)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(lblAboutMeIntro)
                .addGap(119, 119, 119))
        );

        jtbMainDasBoard.addTab("About Us", pnlAboutUs);

        javax.swing.GroupLayout pnlFreelanoMainLayout = new javax.swing.GroupLayout(pnlFreelanoMain);
        pnlFreelanoMain.setLayout(pnlFreelanoMainLayout);
        pnlFreelanoMainLayout.setHorizontalGroup(
            pnlFreelanoMainLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(pnlHeadingTitle, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(jtbMainDasBoard)
        );
        pnlFreelanoMainLayout.setVerticalGroup(
            pnlFreelanoMainLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlFreelanoMainLayout.createSequentialGroup()
                .addComponent(pnlHeadingTitle, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jtbMainDasBoard)
                .addContainerGap())
        );

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        pnlLoadingMain.setBackground(new java.awt.Color(211, 211, 211));

        jpLoadingBar.setBackground(new java.awt.Color(153, 102, 0));

        lblLoading.setFont(new java.awt.Font("Helvetica Neue", 1, 15)); // NOI18N
        lblLoading.setText("Loading...");

        lblWelcomeLogo.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/freelano/resources/WelcomeLogo.png"))); // NOI18N

        lblLoadingTitle.setFont(new java.awt.Font("Helvetica Neue", 1, 20)); // NOI18N
        lblLoadingTitle.setForeground(new java.awt.Color(153, 102, 0));
        lblLoadingTitle.setText("Welcome To Freelano ");

        javax.swing.GroupLayout pnlLoadingMainLayout = new javax.swing.GroupLayout(pnlLoadingMain);
        pnlLoadingMain.setLayout(pnlLoadingMainLayout);
        pnlLoadingMainLayout.setHorizontalGroup(
            pnlLoadingMainLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jpLoadingBar, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(pnlLoadingMainLayout.createSequentialGroup()
                .addGroup(pnlLoadingMainLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(pnlLoadingMainLayout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(lblLoading, javax.swing.GroupLayout.PREFERRED_SIZE, 104, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(pnlLoadingMainLayout.createSequentialGroup()
                        .addGap(164, 164, 164)
                        .addComponent(lblWelcomeLogo))
                    .addGroup(pnlLoadingMainLayout.createSequentialGroup()
                        .addGap(287, 287, 287)
                        .addComponent(lblLoadingTitle, javax.swing.GroupLayout.PREFERRED_SIZE, 230, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(173, Short.MAX_VALUE))
        );
        pnlLoadingMainLayout.setVerticalGroup(
            pnlLoadingMainLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, pnlLoadingMainLayout.createSequentialGroup()
                .addGap(58, 58, 58)
                .addComponent(lblWelcomeLogo, javax.swing.GroupLayout.PREFERRED_SIZE, 290, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(lblLoadingTitle)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 82, Short.MAX_VALUE)
                .addComponent(lblLoading)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jpLoadingBar, javax.swing.GroupLayout.PREFERRED_SIZE, 17, javax.swing.GroupLayout.PREFERRED_SIZE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(pnlLoadingMain, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(pnlLoadingMain, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents
    
    private void initializeData() {
        freelancerList = new LinkedList<>();
           
        // Registering sample students
            registerFreelancer(new FreelanceModel(1234567, "Suyash Koirala", "Python","Basantpur", "Web development", (short) 21));
            registerFreelancer(new FreelanceModel(1432811, "Samir Yadav", "Java","Kathmandu", "Data Science", (short) 25));
            registerFreelancer(new FreelanceModel(1523455, "Aayoush SHah", "c++","Pokhara", "SOftware Development", (short) 29));
            registerFreelancer(new FreelanceModel(1623445, "Ram Ghimire", "Python","Dhangadi", "Data Analysis", (short) 26));
            registerFreelancer(new FreelanceModel(1923424, "Sita paudel", "C#","Baglung", "Web development", (short) 22));
    }

        private void registerFreelancer(FreelanceModel freelancer) {
        freelancerList.add(freelancer);
        DefaultTableModel model = (DefaultTableModel) tblFreelano.getModel();
        model.addRow(new Object[]{
            freelancer.getFreelanceID(), freelancer.getName(), freelancer.getExpertise(),
            freelancer.getAddress(),freelancer.getProject(),freelancer.getAge()
        });
    }
    /**
     * Simulates the loading progress using a SwingWorker thread. Updates a
     * progress bar incrementally and switches to the login screen upon
     * completion.
     */
    private void startProgress() {
        javax.swing.SwingWorker<Void, Integer> worker = new javax.swing.SwingWorker<>() {
            @Override
            protected Void doInBackground() throws Exception {
                for (int i = 0; i <= 100; i++) {
                    Thread.sleep(30); // Simulated delay for progress bar
                    publish(i); // Publish progress
                }
                return null;
            }

            @Override
            protected void process(java.util.List<Integer> chunks) {
                int progress = chunks.get(chunks.size() - 1);
                jpLoadingBar.setValue(progress);
            }

            @Override
            protected void done() {
                loadScreen("LoginScreen"); // Switch to login screen
            }
        };
        worker.execute(); // Start the worker thread
    }
    
    private void txtFldAddressActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtFldAddressActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtFldAddressActionPerformed

    private void txtFldSearchNameActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtFldSearchNameActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtFldSearchNameActionPerformed

    private void btnLoginActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnLoginActionPerformed
        // TODO add your handling code here:
        String username = txtFldUserName.getText();
        String password = new String(jFldPassword.getPassword());

        // Check if username or password is empty
        if (username.isEmpty() || password.isEmpty()) {
            lblErrorLogin.setText("Please enter your username and password.");
        } // Check if username and password are incorrect
        else if (!username.equals("admin") || !password.equals("admin")) {
            lblErrorLogin.setText("Username and password mismatch.");
        } // If credentials are correct, proceed to load the main screen
        else {
            lblErrorLogin.setText(""); // Clear any previous error messages
            loadScreen("MainScreen"); // Load the main screen
        }
    }//GEN-LAST:event_btnLoginActionPerformed

    private void btnAddActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAddActionPerformed
        // TODO add your handling code here:
      boolean isValid = true;

// Validate Freelancer ID
isValid &= validateField(
        txtFldFreelancerId, "Freelancer ID", lblErrorFrelancerId, "Must be a 7-digit number.",
        errorColor, greenColor, ValidationUtil.isValidFreelancerId(Integer.parseInt(txtFldFreelancerId.getText().trim()))
);
// Validate Full Name
isValid &= validateField(
        txtFldFullName, "Full Name", lblErrorFullName, "Must contain only alphabets.",
        errorColor, greenColor, ValidationUtil.isValidName(txtFldFullName.getText())
);

// Validate Expertise
isValid &= validateField(
        txtFldExpertise, "Expertise", lblErrorExpertise, "Must be a valid expertise field.",
        errorColor, greenColor, ValidationUtil.isValidExpertise(txtFldExpertise.getText())
);

// Validate Address
isValid &= validateField(
        txtFldAddress, "Address", lblErrorAddress, "Address cannot be empty.",
        errorColor, greenColor, !txtFldAddress.getText().trim().isEmpty()
);

// Validate Project
isValid &= validateField(
        txtFldProject, "Project", lblErrorProject, "Project name cannot be empty.",
        errorColor, greenColor, !txtFldProject.getText().trim().isEmpty()
);

// Validate Age
try {
    short age = Short.parseShort(txtFldAge.getText().trim());
    isValid &= validateField(
            txtFldAge, "Age", lblErrorAge, "Must be between 18 and 70.",
            errorColor, greenColor, ValidationUtil.isValidAge(age)
    );
} catch (NumberFormatException e) {
    validateField(txtFldAge, "Age", lblErrorAge, "Must be a valid number.", errorColor, greenColor, false);
    isValid = false;
}

if (isValid) {
    // Create a FreelanceModel instance
    FreelanceModel newFreelancer = new FreelanceModel(
            Integer.parseInt(txtFldFreelancerId.getText().trim()),
            txtFldFullName.getText().trim(),
            txtFldExpertise.getText().trim(),
            txtFldAddress.getText().trim(),
            txtFldProject.getText().trim(),
            Short.parseShort(txtFldAge.getText().trim())
            
    );

    // Check for duplicate Freelancer ID
    if (checkDuplicateFreelance(newFreelancer)) {
        txtFldFreelancerId.setBorder(createTitledBorder(errorColor, "Freelancer ID"));
        showDialogBox("Freelancer ID already exists.", "Duplicate Entry", JOptionPane.WARNING_MESSAGE);
    } else {
        // Add the freelancer if no duplicate is found
        freelancerList.add(newFreelancer);
        clearFreelancerForm();
        loadListToTable(freelancerList);
        txtFldFreelancerId.setBorder(createTitledBorder(greenColor, "Freelancer ID"));
        showDialogBox("Freelancer added successfully.", "Success", JOptionPane.INFORMATION_MESSAGE);
    }
}
    }//GEN-LAST:event_btnAddActionPerformed

    
    
    
    private void btnUpdateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnUpdateActionPerformed
        // TODO add your handling code here:
  int selectedRow = tblFreelano.getSelectedRow();

    if (selectedRow < 0 || selectedRow >= freelancerList.size()) {
        showDialogBox("Please select a valid freelancer to update.", "Invalid Selection", JOptionPane.WARNING_MESSAGE);
        return;
    }

    FreelanceModel selectedFreelancer = freelancerList.get(selectedRow);

    boolean isValid = true;

    // Validate Freelancer ID
    int freelancerId = 0;
    try {
        freelancerId = Integer.parseInt(txtFldFreelancerId.getText().trim());
        isValid &= validateField(
                txtFldFreelancerId, "Freelancer ID", lblErrorFrelancerId, 
                "Must be a 7-digit number.", errorColor, greenColor, 
                ValidationUtil.isValidFreelancerId(freelancerId)
        );
    } catch (NumberFormatException e) {
        validateField(txtFldFreelancerId, "Freelancer ID", lblErrorFrelancerId, 
                      "Must be a valid number.", errorColor, greenColor, false);
        isValid = false;
    }

    String fullName = txtFldFullName.getText().trim();
    isValid &= validateField(
            txtFldFullName, "Full Name", lblErrorFullName, 
            "Must contain only alphabets.", errorColor, greenColor, 
            ValidationUtil.isValidName(fullName)
    );

    String expertise = txtFldExpertise.getText().trim();
    isValid &= validateField(
            txtFldExpertise, "Expertise", lblErrorExpertise, 
            "Must be a valid expertise field.", errorColor, greenColor, 
            ValidationUtil.isValidExpertise(expertise)
    );

    String address = txtFldAddress.getText().trim();
    isValid &= validateField(
            txtFldAddress, "Address", lblErrorAddress, 
            "Address cannot be empty.", errorColor, greenColor, 
            !address.isEmpty()
    );

    String project = txtFldProject.getText().trim();
    isValid &= validateField(
            txtFldProject, "Project", lblErrorProject, 
            "Project name cannot be empty.", errorColor, greenColor, 
            !project.isEmpty()
    );

    short age = 0;
    try {
        age = Short.parseShort(txtFldAge.getText().trim());
        isValid &= validateField(
                txtFldAge, "Age", lblErrorAge, 
                "Must be between 18 and 70.", errorColor, greenColor, 
                ValidationUtil.isValidAge(age)
        );
    } catch (NumberFormatException e) {
        validateField(txtFldAge, "Age", lblErrorAge, 
                      "Must be a valid number.", errorColor, greenColor, false);
        isValid = false;
    }

    if (isValid) {
        boolean isDuplicate = freelancerList.stream()
                .filter(f -> !f.equals(selectedFreelancer)) // Exclude the current freelancer
                .anyMatch(f -> Integer.valueOf(f.getFreelanceID()).equals(txtFldFreelancerId));

        if (isDuplicate) {
            txtFldFreelancerId.setBorder(createTitledBorder(errorColor, "Freelancer ID"));
            showDialogBox("Freelancer ID already exists.", "Duplicate Entry", JOptionPane.WARNING_MESSAGE);
            return;
        }

        selectedFreelancer.setFreelanceID(freelancerId);
        selectedFreelancer.setName(fullName);
        selectedFreelancer.setExpertise(expertise);
        selectedFreelancer.setAddress(address);
        selectedFreelancer.setProject(project);
        selectedFreelancer.setAge(age);

        loadListToTable(freelancerList);

        clearFreelancerForm();
        txtFldFreelancerId.setBorder(createTitledBorder(greenColor, "Freelancer ID"));

        showDialogBox("Freelancer updated successfully.", "Success", JOptionPane.INFORMATION_MESSAGE);
    }

    }//GEN-LAST:event_btnUpdateActionPerformed

    private void btnDelete1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDelete1ActionPerformed
        // TODO add your handling code here:
       int selectedRow = tblFreelano.getSelectedRow();

    // Check if the selection is valid
    if (selectedRow < 0 || selectedRow >= freelancerList.size()) {
        showDialogBox("Invalid selection. Please select a valid freelancer to delete.", "Invalid Selection", JOptionPane.WARNING_MESSAGE);
        return;
    }

    // Retrieve the selected freelancer from the list based on the selected row
    FreelanceModel selectedFreelancer = freelancerList.get(selectedRow);

    // Confirm deletion with the user
    int confirmation = JOptionPane.showConfirmDialog(
            null,
            "Are you sure you want to delete this freelancer?",
            "Confirm Deletion",
            JOptionPane.YES_NO_OPTION,
            JOptionPane.WARNING_MESSAGE
    );

    // If the user confirmed deletion, proceed with the removal
    if (confirmation == JOptionPane.YES_OPTION) {
        // Remove the freelancer from the list
        freelancerList.remove(selectedFreelancer);

        // Refresh the table with updated data
        loadListToTable(freelancerList);

        // Show success message
        showDialogBox("Freelancer deleted successfully.", "Success", JOptionPane.INFORMATION_MESSAGE);
    } 
    }//GEN-LAST:event_btnDelete1ActionPerformed

    private void btnFreelancerIdActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnFreelancerIdActionPerformed
        // TODO add your handling code here:
        // Create an instance of SelectionSort class
    SelectionSort selectionSort = new SelectionSort();
    
    // Assuming freelancerList is a List<FreelanceModel> and you want to sort it in descending order (false for ascending, true for descending)
    List<FreelanceModel> sortedFreelancerList = selectionSort.sortByFreelanceID(freelancerList, false);
    
    // Update the table or UI with the sorted list (assuming you have a method like donorListToTable)
    loadListToTable(sortedFreelancerList);
     
    }//GEN-LAST:event_btnFreelancerIdActionPerformed

    private void btnMergeSortAgeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnMergeSortAgeActionPerformed
        // TODO add your handling code here:
        MergeSort mergeSort = new MergeSort();
    
    // Assuming freelancerList is a List<FreelanceModel> and you want to sort it by age in ascending order
    List<FreelanceModel> sortedByAgeList = mergeSort.sortByAge(freelancerList, false);  // false for ascending, true for descending
    
    // Update the table or UI with the sorted list (assuming you have a method like freelancerListToTable)
    loadListToTable(sortedByAgeList); 
    }//GEN-LAST:event_btnMergeSortAgeActionPerformed

    
    
    private void btnExpertiseActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnExpertiseActionPerformed
        // TODO add your handling code here:
      InsertionSort insertionSort = new InsertionSort();
    
    // Assuming freelancerList is a List<FreelanceModel> and you want to sort it by expertise (assuming expertise is a string)
    List<FreelanceModel> sortedByExpertiseList = insertionSort.sortByExpertise(freelancerList, false);  // false for ascending, true for descending
    
    // Update the table or UI with the sorted list (assuming you have a method like freelancerListToTable)
    loadListToTable(sortedByExpertiseList);  
    }//GEN-LAST:event_btnExpertiseActionPerformed

    private void btnSearchNameActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSearchNameActionPerformed
        // TODO add your handling code here:
     // Get the full name entered by the user from a JTextField (assuming it's named txtFldSearchName)
    String searchName = txtFldSearchName.getText().toLowerCase().trim();  // Convert to lowercase for case-insensitive search

    if (searchName.isEmpty()) {
        JOptionPane.showMessageDialog(this, "Please enter a name to search.");
        return;
    }

    // Ensure that the freelancerList is sorted by name before performing binary search
    // Assuming the list is unsorted, you should sort it before searching
    freelancerList.sort((f1, f2) -> f1.getName().toLowerCase().compareTo(f2.getName().toLowerCase()));  // Sort the list by name

    // Create an instance of the BinarySearch class
    BinarySearch binarySearch = new BinarySearch();
    
    // Perform binary search to find the freelancer by full name
    FreelanceModel result = binarySearch.searchByFullName(searchName, freelancerList, 0, freelancerList.size() - 1);
    
    // If the result is found
    if (result != null) {
        // Display the result in the table or other UI components
        loadListToTable(List.of(result));  // Display the result in the table (convert result to list)
    } else {
        // If not found, show a message
        JOptionPane.showMessageDialog(this, "No freelancer found with the name: " + searchName);
    }
        
    }//GEN-LAST:event_btnSearchNameActionPerformed

    private void txtFldFreelancerIdActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtFldFreelancerIdActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtFldFreelancerIdActionPerformed
    
    
    
   private boolean checkDuplicateFreelance(FreelanceModel freelance) {
    return freelancerList.stream()
            .anyMatch(existingFreelance -> existingFreelance.getFreelanceID() == freelance.getFreelanceID());
}

    private javax.swing.border.TitledBorder createTitledBorder(Color color, String title) {
    return javax.swing.BorderFactory.createTitledBorder(
            javax.swing.BorderFactory.createLineBorder(color, 2), // Create a border with specified color and thickness
            title, // Title of the border
            javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, // Default title justification (center, left, etc.)
            javax.swing.border.TitledBorder.DEFAULT_POSITION, // Default title position
            new java.awt.Font("Segoe UI", 1, 12), // Font for the title (bold, size 12)
            color // Color for the title text
    );
}

    private void clearFreelancerForm() {
    txtFldFreelancerId.setText("");
    txtFldFullName.setText("");
    txtFldExpertise.setText("");
    txtFldAge.setText("");
    txtFldProject.setText("");
    txtFldAddress.setText("");
}

    private void loadListToTable(List<FreelanceModel> freelancerList) {
    // Get the table model
    DefaultTableModel model = (DefaultTableModel) tblFreelano.getModel();

    // Clear existing rows in the table
    model.setRowCount(0);

    // Populate the table with freelancer data
    freelancerList.forEach(freelancer -> model.addRow(new Object[]{
        freelancer.getFreelanceID(),
        freelancer.getName(),
        freelancer.getExpertise(),
        freelancer.getAge(),
        freelancer.getProject(),
        freelancer.getAddress()
    }));
}
    
    /**
     * Validates a single input field based on specific criteria and updates its
     * visual state.
     *
     * @param textField the JTextField to validate
     * @param fieldName the name of the field for error display
     * @param errorLbl the JLabel to show error messages
     * @param errorMsg the error message to display for invalid input
     * @param errorColor the color for error borders and text
     * @param successColor the color for successful validation borders
     * @param isValidFormat whether the input satisfies the field-specific
     * validation criteria
     * @return true if the field passes validation, false otherwise
     */
    private boolean validateField(JTextField textField, String fieldName, JLabel errorLbl, String errorMsg, Color errorColor, Color successColor, boolean isValidFormat) {
        if (ValidationUtil.isNullOrEmpty(textField.getText())) {
            textField.setBorder(createTitledBorder(errorColor, fieldName));
            errorLbl.setText("Field cannot be empty!");
            errorLbl.setVisible(true);
            return false;
        } else if (!isValidFormat) {
            textField.setBorder(createTitledBorder(errorColor, fieldName));
            errorLbl.setText(errorMsg);
            errorLbl.setVisible(true);
            return false;
        } else {
            textField.setBorder(createTitledBorder(successColor, fieldName));
            errorLbl.setVisible(false);
            return true;
        }
    }

    private void showDialogBox(String message, String title, int messageType) {
        JOptionPane.showMessageDialog(this, message, title, messageType);
    }
    /**
     * @param args the command line arguments
     */
   public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Freelano.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Freelano.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Freelano.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Freelano.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        Freelano app = new Freelano();

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(() -> {
            app.setVisible(true);
        });

        app.startProgress();
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnAdd;
    private javax.swing.JButton btnClear;
    private javax.swing.JButton btnDelete1;
    private javax.swing.JButton btnExpertise;
    private javax.swing.JButton btnFreelancerId;
    private javax.swing.JButton btnLogin;
    private javax.swing.JButton btnMergeSortAge;
    private javax.swing.JButton btnSearchName;
    private javax.swing.JButton btnUpdate;
    private javax.swing.JPasswordField jFldPassword;
    private javax.swing.JScrollPane jSpTableScoll;
    private javax.swing.JProgressBar jpLoadingBar;
    private javax.swing.JTabbedPane jtbMainDasBoard;
    private javax.swing.JLabel lblAboutMe;
    private javax.swing.JLabel lblAboutMeIntro;
    private javax.swing.JLabel lblAboutUsLogo;
    private javax.swing.JLabel lblAboutUsTitle;
    private javax.swing.JLabel lblErrorAddress;
    private javax.swing.JLabel lblErrorAge;
    private javax.swing.JLabel lblErrorExpertise;
    private javax.swing.JLabel lblErrorFrelancerId;
    private javax.swing.JLabel lblErrorFullName;
    private javax.swing.JLabel lblErrorLogin;
    private javax.swing.JLabel lblErrorProject;
    private javax.swing.JLabel lblForgetPassword;
    private javax.swing.JLabel lblFreelanceTitle;
    private javax.swing.JLabel lblHeading;
    private javax.swing.JLabel lblHomeLogo;
    private javax.swing.JLabel lblHomeTitle;
    private javax.swing.JLabel lblImageIcon;
    private javax.swing.JLabel lblInfoTable;
    private javax.swing.JLabel lblLoading;
    private javax.swing.JLabel lblLoadingTitle;
    private javax.swing.JLabel lblLoginLogo;
    private javax.swing.JLabel lblMainLogo;
    private javax.swing.JLabel lblPassword;
    private javax.swing.JLabel lblSignIn;
    private javax.swing.JLabel lblSubTitle;
    private javax.swing.JLabel lblTitleThird;
    private javax.swing.JLabel lblUserName;
    private javax.swing.JLabel lblWelcomeLogo;
    private javax.swing.JPanel pnlAboutUs;
    private javax.swing.JPanel pnlFreelancerList;
    private javax.swing.JPanel pnlFreelanoDetail;
    private javax.swing.JPanel pnlFreelanoList;
    private javax.swing.JPanel pnlFreelanoLogin;
    private javax.swing.JPanel pnlFreelanoMain;
    private javax.swing.JPanel pnlHeadingTitle;
    private javax.swing.JPanel pnlHome;
    private javax.swing.JPanel pnlLoadingMain;
    private javax.swing.JTable tblFreelano;
    private javax.swing.JTextField txtFldAddress;
    private javax.swing.JTextField txtFldAge;
    private javax.swing.JTextField txtFldExpertise;
    private javax.swing.JTextField txtFldFreelancerId;
    private javax.swing.JTextField txtFldFullName;
    private javax.swing.JTextField txtFldProject;
    private javax.swing.JTextField txtFldSearchName;
    private javax.swing.JTextField txtFldUserName;
    // End of variables declaration//GEN-END:variables
}
